name: Linux-ARM

#on:
#  push:
#    branches:
#    - master
#  pull_request:
#    branches:
#    - master

on: [push, pull_request]

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"

#on: push
#
#jobs:
#  build_job:
#    # The host should always be linux
#    runs-on: ubuntu-18.04
#    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
#
#    # Run steps on a matrix of 3 arch/distro combinations
#    strategy:
#      matrix:
#        include:
#          - arch: aarch64
#            distro: stretch
#          #- arch: armv6
#          #  distro: jessie
#
#    steps:
#      - uses: actions/checkout@v2.1.0
#      - uses: uraimo/run-on-arch-action@v2.0.9
#        name: Build artifact
#        id: build
#        with:
#          arch: ${{ matrix.arch }}
#          distro: ${{ matrix.distro }}
#
#          # Not required, but speeds up builds
#          # githubToken: ${{ github.token }}
#
#          # Create an artifacts directory
#          setup: |
#            mkdir -p "${PWD}/artifacts"
#
#          # Mount the artifacts directory as /artifacts in the container
#          dockerRunArgs: |
#            --volume "${PWD}/artifacts:/artifacts"
#
#          # Pass some environment variables to the container
#          env: | # YAML, but pipe character is necessary
#            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}
#
#          # The shell to run commands with in the container
#          shell: /bin/bash
#
#          # Install some dependencies in the container. This speeds up builds if
#          # you are also using githubToken. Any dependencies installed here will
#          # be part of the container image that gets cached, so subsequent
#          # builds don't have to re-install them. The image layer is cached
#          # publicly in your project's package repository, so it is vital that
#          # no secrets are present in the container state or logs.
#          install: |
#              apt-get update -y
#              apt-get install -y libasound2-dev libxinerama-dev libgl1-mesa-dev libxi-dev git
#
#          # Produce a binary artifact and place it in the mounted volume
#          run: |
#            echo "Test"
#            echo "Test"


    #steps:
    #- uses: actions/checkout@v1
    #- name: Apt Update
    #  run: sudo apt-get update
    #- name: Apt Install
    #  run: sudo apt-get install libasound2-dev libxinerama-dev libgl1-mesa-dev libxi-dev --yes --quiet
    #- name: Get Submodules
    #  run: git submodule update --init --recursive
    #- name: Get Kinc
    #  run: git clone --recursive https://github.com/Kode/Kinc.git
    #- name: Get Node.js
    #  run: git clone https://github.com/Kode/nodejs_bin.git --depth 1
    #- name: Setup Node.js
    #  run: nodejs_bin/copysysbin.sh
    #- name: Compile
    #  run: nodejs_bin/node Kinc/make --compile
    #- name: Get krafix_bin
    #  run: git clone https://github.com/Kode/krafix_bin.git
    #- name: Copy binary
    #  run: cp build/Release/krafix krafix_bin/krafix-linux64
    #- name: Set name
    #  run: git config --global user.name "Robbot"
    #- name: Set email
    #  run: git config --global user.email "robbot2019@robdangero.us"
    #- name: Commit binary
    #  run: git -C krafix_bin commit -a -m "Update Linux binary to $GITHUB_SHA."
    #- name: Tag binary
    #  run: git -C krafix_bin tag linux_$GITHUB_SHA
    #- name: Push binary
    #  run: git -C krafix_bin push https://Kode-Robbot:$ROBBOT_PASS@github.com/Kode/krafix_bin.git master --tags
    #  env:
    #    ROBBOT_PASS: ${{ secrets.ROBBOT_PASS }}
